{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst refs = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    validateDate(selectedDates[0]);\n  },\n  onChange(selectedDates) {\n    validateDate(selectedDates[0]);\n  },\n});\n\nfunction validateDate(date) {\n  if (date <= new Date()) {\n    userSelectedDate = null;\n    startBtn.disabled = true;\n    iziToast.error({\n      message: 'Please choose a date in the future',\n      position: 'topRight',\n      timeout: 3000,\n    });\n    return;\n  }\n\n  userSelectedDate = new Date(date);\n  startBtn.disabled = false;\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const ms = userSelectedDate - now;\n\n    if (ms <= 0) {\n      clearInterval(timerId);\n      updateTimer(convertMs(0));\n      input.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    updateTimer(convertMs(ms));\n  }, 1000);\n});\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  refs.days.textContent = String(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = 60 * second;\n  const hour = 60 * minute;\n  const day = 24 * hour;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","startBtn","refs","userSelectedDate","timerId","flatpickr","selectedDates","validateDate","date","iziToast","ms","updateTimer","convertMs","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAO,CACX,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAU,KAEdH,EAAS,SAAW,GAEpBI,EAAUL,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQM,EAAe,CACrBC,EAAaD,EAAc,CAAC,CAAC,CAC9B,EACD,SAASA,EAAe,CACtBC,EAAaD,EAAc,CAAC,CAAC,CAC9B,CACH,CAAC,EAED,SAASC,EAAaC,EAAM,CAC1B,GAAIA,GAAQ,IAAI,KAAQ,CACtBL,EAAmB,KACnBF,EAAS,SAAW,GACpBQ,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WACV,QAAS,GACf,CAAK,EACD,MACD,CAEDN,EAAmB,IAAI,KAAKK,CAAI,EAChCP,EAAS,SAAW,EACtB,CAEAA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAM,SAAW,GAEjBI,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAKP,EADC,IAAI,KAGhB,GAAIO,GAAM,EAAG,CACX,cAAcN,CAAO,EACrBO,EAAYC,EAAU,CAAC,CAAC,EACxBZ,EAAM,SAAW,GACjBC,EAAS,SAAW,GACpB,MACD,CAEDU,EAAYC,EAAUF,CAAE,CAAC,CAC1B,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDd,EAAK,KAAK,YAAc,OAAOW,CAAI,EACnCX,EAAK,MAAM,YAAce,EAAeH,CAAK,EAC7CZ,EAAK,QAAQ,YAAce,EAAeF,CAAO,EACjDb,EAAK,QAAQ,YAAce,EAAeD,CAAO,CACnD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUF,EAAI,CAMrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAC1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EACpCK,EAAU,KAAK,MAAOL,EAAK,KAAQ,GAAM,EACzCM,EAAU,KAAK,MAAON,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}